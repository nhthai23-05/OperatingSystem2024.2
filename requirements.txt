# Operating Systems 2024.2 - AI-Powered CPU Scheduler Project
# Complete dependencies for all steps (Step 1-4)

# ================================
# Step 1: Data Collection & System Monitoring
# ================================
psutil>=5.9.0              # System and process monitoring
pandas>=1.5.0              # Data manipulation and analysis
numpy>=1.21.0              # Numerical computing

# ================================
# Step 2: Baseline Machine Learning
# ================================
scikit-learn>=1.1.0        # Machine learning algorithms
xgboost>=1.6.0             # Gradient boosting framework
lightgbm>=3.3.0            # Alternative gradient boosting (optional)
imbalanced-learn>=0.9.0    # Handling imbalanced datasets (SMOTE)
onnx>=1.12.0               # Model serialization format
onnxruntime>=1.12.0        # ONNX model inference

# ================================
# Step 3: RL Environment Simulation
# ================================
gymnasium>=0.29.1          # Modern OpenAI Gym environment framework

# ================================
# Step 4: Reinforcement Learning Training
# ================================
stable-baselines3>=2.0.0   # RL algorithms library (compatible with gymnasium)
torch>=1.12.0              # PyTorch deep learning framework
tensorboard>=2.8.0         # Training visualization and monitoring

# ================================
# Demo Interface & Visualization
# ================================
gradio>=4.0.0              # Web interface for interactive demo
matplotlib>=3.5.0          # Plotting and visualization
seaborn>=0.11.0            # Statistical data visualization
plotly>=5.10.0             # Interactive plots (optional)

# ================================
# Development & Utilities
# ================================
jupyter>=1.0.0             # Jupyter notebooks for analysis (optional)
tqdm>=4.64.0               # Progress bars
cloudpickle>=2.0.0         # Enhanced pickling for ML models
argparse                   # Command line argument parsing (built-in)
subprocess                 # Process management (built-in)

# ================================
# System Stress Testing (Step 1)
# ================================
# Note: stress-ng is a system tool, install separately:
# Ubuntu/Debian: sudo apt install stress-ng
# macOS: brew install stress-ng
# Windows: Use alternative stress testing tools

# ================================
# Optional Dependencies for Enhanced Features
# ================================
# onnx2torch>=1.5.0        # Convert ONNX to PyTorch (if needed)
# wandb>=0.13.0             # Experiment tracking (alternative to tensorboard)
# optuna>=3.0.0             # Hyperparameter optimization
# ray[rllib]>=2.0.0         # Distributed RL training (advanced)
# fastapi>=0.95.0           # Alternative web framework (if replacing Gradio)
# uvicorn>=0.18.0           # ASGI server for FastAPI

# ================================
# Version Compatibility Notes
# ================================
# This project uses:
# - gymnasium>=0.29.1 (modern version of OpenAI Gym)
# - stable-baselines3>=2.0.0 (compatible with gymnasium)
# - gradio>=4.0.0 (for interactive web demo)